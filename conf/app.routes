# microservice specific routes

->          /hmrc-frontend                               hmrcfrontend.Routes

GET         /                                            controllers.IndexController.onPageLoad

GET         /start                                       controllers.RegistrationController.start

GET         /assets/*file                                controllers.Assets.versioned(path="/public", file: Asset)

GET         /refresh-session                             controllers.KeepAliveController.keepAlive

GET         /there-is-a-problem                          controllers.JourneyRecoveryController.onPageLoad(continueUrl: Option[RedirectUrl] ?= None)

GET         /check-your-answers                          controllers.CheckYourAnswersController.onPageLoad

GET         /account/sign-out-survey                     controllers.auth.AuthController.signOut
GET         /account/sign-out                            controllers.auth.AuthController.signOutNoSurvey
GET         /account/signed-out                          controllers.auth.SignedOutController.onPageLoad

GET         /unauthorised                                controllers.UnauthorisedController.onPageLoad

GET        /organisation-type                            controllers.OrganisationTypeController.onPageLoad(mode: Mode = NormalMode)
POST       /organisation-type                            controllers.OrganisationTypeController.onSubmit(mode: Mode = NormalMode)
GET        /change-organisation-type                     controllers.OrganisationTypeController.onPageLoad(mode: Mode = CheckMode)
POST       /change-organisation-type                     controllers.OrganisationTypeController.onSubmit(mode: Mode = CheckMode)

GET        /cannot-register-partnership                       controllers.CannotRegisterPartnershipController.onPageLoad()

GET        /packaging-site-details                        controllers.PackagingSiteDetailsController.onPageLoad(mode: Mode = NormalMode)
POST       /packaging-site-details                        controllers.PackagingSiteDetailsController.onSubmit(mode: Mode = NormalMode)
GET        /change-packaging-site-details                  controllers.PackagingSiteDetailsController.onPageLoad(mode: Mode = CheckMode)
POST       /change-packaging-site-details                  controllers.PackagingSiteDetailsController.onSubmit(mode: Mode = CheckMode)

GET        /how-many-litres-globally                     controllers.HowManyLitresGloballyController.onPageLoad(mode: Mode = NormalMode)
POST       /how-many-litres-globally                     controllers.HowManyLitresGloballyController.onSubmit(mode: Mode = NormalMode)
GET        /change-how-many-litres-globally              controllers.HowManyLitresGloballyController.onPageLoad(mode: Mode = CheckMode)
POST       /change-how-many-litres-globally              controllers.HowManyLitresGloballyController.onSubmit(mode: Mode = CheckMode)

GET        /third-party-packagers                        controllers.ThirdPartyPackagersController.onPageLoad(mode: Mode = NormalMode)
POST       /third-party-packagers                        controllers.ThirdPartyPackagersController.onSubmit(mode: Mode = NormalMode)
GET        /change-third-party-packagers                  controllers.ThirdPartyPackagersController.onPageLoad(mode: Mode = CheckMode)
POST       /change-third-party-packagers                  controllers.ThirdPartyPackagersController.onSubmit(mode: Mode = CheckMode)

GET        /do-not-register                        controllers.DoNotRegisterController.onPageLoad

GET        /ask-secondary-warehouses                        controllers.AskSecondaryWarehousesController.onPageLoad(mode: Mode = NormalMode)
POST       /ask-secondary-warehouses                        controllers.AskSecondaryWarehousesController.onSubmit(mode: Mode = NormalMode)
GET        /change-ask-secondary-warehouses                  controllers.AskSecondaryWarehousesController.onPageLoad(mode: Mode = CheckMode)
POST       /change-ask-secondary-warehouses                  controllers.AskSecondaryWarehousesController.onSubmit(mode: Mode = CheckMode)

